#!/bin/sh

fancy_echo() {
	local fmt="$1"; shift

	# shellcheck disable=SC2059
	printf "\n$fmt\n" "$@"
}

append_to_bashrc() {
  local text="$1" bashrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.bashrc.local" ]; then
    bashrc="$HOME/.bashrc.local"
  else
    bashrc="$HOME/.bashrc"
  fi

  if ! grep -Fqs "$text" "$bashrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$bashrc"
    else
      printf "\n%s\n" "$text" >> "$bashrc"
    fi
  fi
}

mkdir -p $HOME/.bin

case "$SHELL" in
	*/bash) : ;;
	*)
		fancy_echo "Changing your shell to bash ..."
			chsh -s "$(which bash)"
	;;
esac

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      fancy_echo "Upgrading %s ..." "$1"
      brew upgrade "$@"
    else
      fancy_echo "Already using the latest version of %s. Skipping ..." "$1"
    fi
  else
    fancy_echo "Installing %s ..." "$1"
    brew install "$@"
  fi
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

brew_tap() {
  brew tap "$1" 2> /dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_launchctl_restart() {
  local name="$(brew_expand_alias "$1")"
  local domain="homebrew.mxcl.$name"
  local plist="$domain.plist"

  fancy_echo "Restarting %s ..." "$1"
  mkdir -p "$HOME/Library/LaunchAgents"
  ln -sfv "/usr/local/opt/$name/$plist" "$HOME/Library/LaunchAgents"

  if launchctl list | grep -Fq "$domain"; then
    launchctl unload "$HOME/Library/LaunchAgents/$plist" >/dev/null
  fi
  launchctl load "$HOME/Library/LaunchAgents/$plist" >/dev/null
}

#cairo config
PKG_CONFIG="http://pkgconfig.freedesktop.org/releases/pkg-config-0.28.tar.gz"
PIXMAN="http://www.cairographics.org/releases/pixman-0.32.4.tar.gz"
CAIRO="http://cairographics.org/releases/cairo-1.12.16.tar.xz"
FREETYPE="http://download.savannah.gnu.org/releases/freetype/freetype-2.4.10.tar.gz"
LIBPNG="http://downloads.sourceforge.net/project/libpng/libpng16/1.6.10/libpng-1.6.10.tar.gz"
GIF_LIB="https://downloads.sourceforge.net/project/giflib/giflib-4.x/giflib-4.1.6/giflib-4.1.6.tar.gz"
PREFIX=${1-/usr/local}

require() {
  echo "... checking for $1"
  if test `which $1`; then
    echo "... found"
  else
    echo "... not found"
    exit 1
  fi
}

fetch() {
  local tarball=`basename $1`
  echo "... downloading $tarball"
  local dir=`basename $tarball .tar.gz`
  curl -# -L $1 -o $tarball \
    && echo "... unpacking" \
    && tar -zxf $tarball \
    && echo "... removing tarball" \
    && rm -fr $tarball \
    && install $dir
}

fetch_xz() {
  local tarball=`basename $1`
  echo "... downloading $tarball"
  local dir=`basename $tarball .tar.xz`
  curl -# -L $1 -o $tarball \
    && echo "... unpacking" \
    && tar -xJf $tarball \
    && echo "... removing tarball" \
    && rm -fr $tarball \
    && install $dir
}

install() {
  local dir=$1
  echo "... installing $1"
 cd $dir \
   && ./configure --disable-dependency-tracking --prefix=$PREFIX \
   && make \
   && make install \
   && echo "... removing $dir" \
   && cd .. && rm -fr $dir
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_bashrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_bashrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update

brew_install_or_upgrade 'git'
brew_install_or_upgrade 'openssl'
brew unlink openssl && brew link openssl --force

#configure apache
sudo sed -i '' '/^#.*mod_vhost_alias.so/ s/^#//' '/private/etc/apache2/httpd.conf'
sudo sed -i '' '/^#.*mod_rewrite.so/ s/^#//' '/private/etc/apache2/httpd.conf'
sudo sed -i '' '/^#.*libphp5.so/ s/^#//' '/private/etc/apache2/httpd.conf'
sudo sed -i '' '/^#.*\/private\/etc\/apache2\/extra\/http-vhosts.conf/ s/^#//' '/private/etc/apache2/httpd.conf'
sudo sed -i '' '/DirectoryIndex index.html/ s//DirectoryIndex index.html index.php/' '/private/etc/apache2/httpd.conf'
sudo apachectl restart

#install and configure mysql
brew_install_or_upgrade 'mysql'
mysql.server restart
mysql_secure_installation
mysql.server restart


#install dependencies for cairo
echo "... installing to $PREFIX"
require curl
require tar
test `which pkg-config` || fetch $PKG_CONFIG
require 'pkg-config'
fetch $LIBPNG
fetch $GIF_LIB
fetch $FREETYPE
fetch $PIXMAN
fetch_xz $CAIRO

if [ -f "$HOME/.laptop.local" ]; then
  . "$HOME/.laptop.local"
fi
